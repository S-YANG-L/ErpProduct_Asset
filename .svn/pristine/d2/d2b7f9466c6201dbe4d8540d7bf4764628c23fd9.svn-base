<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.ecode.modules.ass.borrow.dao.AssetBorrowInfoDao">
	
	<!-- 输出字段列 -->
	<sql id="assetBorrowInfoColumns">
		a.id AS "id",
		a.borrow_code AS "borrowCode",
		a.borrower_code AS "borrowerCode",
		a.borrower_name AS "borrowerName",
		a.borrow_date AS "borrowDate",
		a.expected_return_date AS "expectedReturnDate",
		a.fact_return_date AS "factReturnDate",
		a.restituer_code AS "restituerCode",
		a.restituer_name AS "restituerName",
		a.approve_status AS "approveStatus",
		a.notes AS "notes",
		a.extend_s1 AS "extendS1",
		a.extend_s2 AS "extendS2",
		a.extend_s3 AS "extendS3",
		a.remarks AS "remarks",
		a.create_by AS "createBy.userCode",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.userCode",
		a.update_date AS "updateDate",
		a.status AS "status"
	</sql>
	<!-- 输出字段列 -->
    <sql id="assetBorrowDtlColumns">
		a.id AS "id",
		a.borrow_code AS "borrowCode",
		a.asset_code AS "assetCode",
		a.asset_name AS "assetName",
		a.sort_code AS "sortCode",
		a.sort_name AS "sortName",
		a.brand AS "brand",
		a.version AS "version",
		a.storage_place AS "storagePlace",
		a.company_code AS "companyCode",
		a.company_name AS "companyName",
		a.office_code AS "office.officeCode",
		a.office_name AS "officeName",
		a.user_code AS "user.userCode",
		a.user_name AS "userName",
		a.extend_s1 AS "extendS1",
		a.extend_s2 AS "extendS2",
		a.extend_s3 AS "extendS3",
		a.remarks AS "remarks",
		a.create_by AS "createBy.userCode",
		a.create_date AS "createDate",
		a.update_by AS "updateBy.userCode",
		a.update_date AS "updateDate",
		a.status AS "status",
		o12.office_name AS "office.officeName",
		u14.user_name AS "user.userName"
	</sql>
	

	<!-- 输出字段关联表 -->
	<sql id="assetBorrowInfoJoins">
	
	</sql>
	
	<!-- 获取单条数据 -->
	<select id="get" resultType="AssetBorrowInfo">
		SELECT 
			<include refid="assetBorrowInfoColumns"/>
		FROM ass_asset_borrow_info a
		<include refid="assetBorrowInfoJoins"/>
		WHERE a.id = #{id}
	</select>
	
     
	
	<!-- 查询数据列表 -->
	<select id="findList" resultType="AssetBorrowInfo">
		SELECT 
			<include refid="assetBorrowInfoColumns"/>
		FROM ass_asset_borrow_info a
		<include refid="assetBorrowInfoJoins"/>
		<where>
			a.status != #{STATUS_DELETE}
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="borrowCode != null and borrowCode != ''">
				AND a.borrow_code = #{borrowCode}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	  <!-- 查询数据列表 -->
    <select id="findListDtl" resultType="AssetBorrowDtl">
        SELECT
        <include refid="assetBorrowDtlColumns"/>
       FROM ass_asset_borrow__dtl a
        <where>
            a.status != #{STATUS_DELETE}
            <if test="id != null and id != ''">
             and  a.id = #{id}
            </if>
        </where>
    </select>
	<!-- 查询数据列表（全部数据） -->
	<select id="findAllList" resultType="AssetBorrowInfo">
		SELECT 
			<include refid="assetBorrowInfoColumns"/>
		FROM ass_asset_borrow_info a
		<include refid="assetBorrowInfoJoins"/>
		<where>
			a.status != #{STATUS_DELETE}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.update_date DESC
			</otherwise>
		</choose>
	</select>
	
	<!-- 插入数据 -->
	<insert id="saveassetBorrowDtl">
		INSERT INTO ass_asset_borrow__dtl(
			id,
			borrow_code,
			asset_code,
			asset_name,
			sort_code,
			sort_name,
			brand,
			version,
			storage_place,
			company_code,
			company_name,
			office_code,
			office_name,
			user_code,
			user_name,
			extend_s1,
			extend_s2,
			extend_s3,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			status
		) VALUES (
			#{id},
			#{borrowCode},
			#{assetCode},
			#{assetName},
			#{sortCode},
			#{sortName},
			#{brand},
			#{version},
			#{storagePlace},
			#{companyCode},
			#{companyName},
			#{office.officeCode},
			#{officeName},
			#{user.userCode},
			#{userName},
			#{extendS1},
			#{extendS2},
			#{extendS3},
			#{remarks},
			#{createBy.userCode},
			#{createDate},
			#{updateBy.userCode},
			#{updateDate},
			#{status}
		)
	</insert> 
	
	
	<!-- 插入数据 -->
	<insert id="insert">
		INSERT INTO ass_asset_borrow_info(
			id,
			borrow_code,
			borrower_code,
			borrower_name,
			borrow_date,
			expected_return_date,
			fact_return_date,
			restituer_code,
			restituer_name,
			approve_status,
			notes,
			extend_s1,
			extend_s2,
			extend_s3,
			remarks,
			create_by,
			create_date,
			update_by,
			update_date,
			status
		) VALUES (
			#{id},
			#{borrowCode},
			#{borrowerCode},
			#{borrowerName},
			#{borrowDate},
			#{expectedReturnDate},
			#{factReturnDate},
			#{restituerCode},
			#{restituerName},
			#{approveStatus},
			#{notes},
			#{extendS1},
			#{extendS2},
			#{extendS3},
			#{remarks},
			#{createBy.userCode},
			#{createDate},
			#{updateBy.userCode},
			#{updateDate},
			#{status}
		)
	</insert>
	
	

	<!-- 更新数据 -->
	<update id="update">
		UPDATE ass_asset_borrow_info SET 	
			borrow_code = #{borrowCode},
			borrower_code = #{borrowerCode},
			borrower_name = #{borrowerName},
			borrow_date = #{borrowDate},
			expected_return_date = #{expectedReturnDate},
			fact_return_date = #{factReturnDate},
			restituer_code = #{restituerCode},
			restituer_name = #{restituerName},
			approve_status = #{approveStatus},
			notes = #{notes},
			extend_s1 = #{extendS1},
			extend_s2 = #{extendS2},
			extend_s3 = #{extendS3},
			remarks = #{remarks},
			update_by = #{updateBy.userCode},
			update_date = #{updateDate}
		WHERE id = #{id}
	</update>
	
	
	
	<!-- 逻辑删除数据 -->
	 <update id="deleteassetBorrowDtl">
		DELETE from ass_asset_borrow__dtl 
		WHERE id = #{id}
	</update>
	<!-- 逻辑删除数据 -->
	<update id="delete">
		UPDATE ass_asset_borrow_info SET 
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			status = #{STATUS_DELETE}
		WHERE id = #{id}
	</update>
	
</mapper>