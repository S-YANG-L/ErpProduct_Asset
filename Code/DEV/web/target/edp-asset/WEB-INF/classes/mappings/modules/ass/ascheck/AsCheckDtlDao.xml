<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="cn.net.ecode.modules.ass.ascheck.dao.AsCheckDtlDao">
	
	<!-- 输出字段列 -->
	<sql id="asCheckDtlColumns">
		a.id AS "id",
		a.check_code AS "checkCode",
		a.articles_code AS "articlesCode",
		a.articles_name AS "articlesName",
		a.wh_code AS "whCode",
		a.wh_name AS "whName",
		a.sort_code AS "sortCode",
		a.sort_name AS "sortName",
		a.brand AS "brand",
		a.version AS "version",
		a.unit AS "unit",
		a.price AS "price",
		a.qty AS "qty",
		a.sum_money AS "sumMoney",
		a.update_by AS "updateBy.userCode",
		a.update_date AS "updateDate",
		a.create_by AS "createBy.userCode",
		a.create_date AS "createDate",
		a.status AS "status",
		a.remarks AS "remarks",
		a.check_qty AS "checkQty",
		a.initial_qty AS "initialQty",
		a.initial_price AS "initialPrice",
		a.initial_money AS "initialMoney"
	</sql>
	
	<!-- 输出字段关联表 -->
	<sql id="asCheckDtlJoins">
<!-- 		LEFT JOIN ass_as_check b ON b.id = a.check_code -->
	</sql>

    <!-- 获取子表数据 -->
    <select id="findCheckCode" resultType="AsCheckDtl">
        SELECT
        <include refid="asCheckDtlColumns"/>
        FROM ass_as_check_dtl a
        <include refid="asCheckDtlJoins"/>
        WHERE a.check_code = #{checkCode}
    </select>

	<!-- 获取单条数据 -->
	<select id="get" resultType="AsCheckDtl">
		SELECT 
			<include refid="asCheckDtlColumns"/>
		FROM ass_as_check_dtl a
		<include refid="asCheckDtlJoins"/>
		WHERE a.id = #{id}
	</select>
	
	<!-- 查询数据列表 -->
	<select id="findList" resultType="AsCheckDtl">
		SELECT 
			<include refid="asCheckDtlColumns"/>
		FROM ass_as_check_dtl a
		<include refid="asCheckDtlJoins"/>
		<where>
			a.status != #{STATUS_DELETE}
			<if test="status != null and status != ''">
				AND a.status = #{status}
			</if>
			<if test="checkCode != null and checkCode != ''">
				AND a.check_code = #{checkCode}
			</if>
			<if test="articlesName != null and articlesName != ''">
				AND a.articles_name = #{articlesName}
			</if>
			<if test="whName != null and whName != ''">
				AND a.wh_name = #{whName}
			</if>
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<!-- 查询数据列表（全部数据） -->
	<select id="findAllList" resultType="AsCheckDtl">
		SELECT 
			<include refid="asCheckDtlColumns"/>
		FROM ass_as_check_dtl a
		<include refid="asCheckDtlJoins"/>
		<where>
			a.status != #{STATUS_DELETE}
		</where>
		<choose>
			<when test="page !=null and page.orderBy != null and page.orderBy != ''">
				ORDER BY ${page.orderBy}
			</when>
			<otherwise>
				ORDER BY a.create_date ASC
			</otherwise>
		</choose>
	</select>
	
	<!-- 插入数据 -->
	<insert id="insert">
		INSERT INTO ass_as_check_dtl(
			id,
			check_code,
			articles_code,
			articles_name,
			wh_code,
			wh_name,
			sort_code,
			sort_name,
			brand,
			version,
			unit,
			price,
			qty,
			sum_money,
			update_by,
			update_date,
			create_by,
			create_date,
			status,
			remarks,
			check_qty,
			initial_qty,
			initial_price,
			initial_money
		) VALUES (
			#{id},
			#{checkCode},
			#{articlesCode},
			#{articlesName},
			#{whCode},
			#{whName},
			#{sortCode},
			#{sortName},
			#{brand},
			#{version},
			#{unit},
			#{price},
			#{qty},
			#{sumMoney},
			#{updateBy.userCode},
			#{updateDate},
			#{createBy.userCode},
			#{createDate},
			#{status},
			#{remarks},
			#{checkQty},
			#{initialQty},
			#{initialPrice},
			#{initialMoney}
		)
	</insert>
	
	<!-- 插入子表数据 -->
	<insert id="insertDtl">
		INSERT INTO ass_as_check_dtl(
			id,
			check_code,
			articles_code,
			articles_name,
			wh_code,
			wh_name,
			sort_code,
			sort_name,
			brand,
			version,
			unit,
			price,
			qty,
			sum_money,
			update_by,
			update_date,
			create_by,
			create_date,
			status,
			remarks,
			check_qty,
			initial_qty,
			initial_price,
			initial_money
		) VALUES (
			#{id},
			#{checkCode},
			#{articlesCode},
			#{articlesName},
			#{whCode},
			#{whName},
			#{sortCode},
			#{sortName},
			#{brand},
			#{version},
			#{unit},
			#{price},
			#{qty},
			#{sumMoney},
			#{updateBy.userCode},
			#{updateDate},
			#{createBy.userCode},
			#{createDate},
			#{status},
			#{remarks},
			#{checkQty},
			#{initialQty},
			#{initialPrice},
			#{initialMoney}
		)
	</insert>
	
	<!-- 更新数据 -->
	<update id="update">
		UPDATE ass_as_check_dtl SET 	
			check_code = #{checkCode},
			articles_code = #{articlesCode},
			articles_name = #{articlesName},
			wh_code = #{whCode},
			wh_name = #{whName},
			sort_code = #{sortCode},
			sort_name = #{sortName},
			brand = #{brand},
			version = #{version},
			unit = #{unit},
			price = #{price},
			qty = #{qty},
			sum_money = #{sumMoney},
			update_by = #{updateBy.userCode},
			update_date = #{updateDate},
			remarks = #{remarks},
			check_qty = #{checkQty},
			initial_qty = #{initialQty},
			initial_price = #{initialPrice},
			initial_money = #{initialMoney}
		WHERE id = #{id}
	</update>
	
	<!-- 逻辑删除数据 -->
	<update id="delete">
		UPDATE ass_as_check_dtl SET 
			update_by = #{updateBy.id},
			update_date = #{updateDate},
			status = #{STATUS_DELETE}
		<choose>
			<when test="id != null and id != ''">
				WHERE id = #{id}
			</when>
			<otherwise>
				WHERE check_code = #{checkCode}
			</otherwise>
		</choose>
	</update>
	
</mapper>